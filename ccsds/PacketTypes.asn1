--!
--! Copyright (C) 2017 N7 Mobile sp. z o. o.
--! Contact: http://n7mobile.pl/Space
--!
--! This file is part of ASN.1/ACN PUS-C Components Library.
--!
--! Library was developed under a programme and funded by
--! European Space Agency.
--!
--! This Library is free software: you can redistribute it and/or modify
--! it under the terms of the GNU General Public License as published by
--! the Free Software Foundation, either version 3 of the License, or
--! (at your option) any later version.
--!
--! This Library is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU General Public License for more details.
--!
--! You should have received a copy of the GNU General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.
--!

PacketTypes DEFINITIONS AUTOMATIC TAGS::= BEGIN
EXPORTS ALL;
IMPORTS
    ApplicationProcess-ID FROM ApplicationProcess;

CCSDS-Packet {TPacket-ID, TPacketDataField} ::= SEQUENCE
{
    packetVersionNumber PacketVersionNumberValue,
    packet-ID TPacket-ID,
    packetSequenceControl PacketSequenceControl,
    packetDataLength PacketDataLength,
    packetDataField TPacketDataField
}

PacketVersionNumberValue ::= NULL

Packet-ID {TPacketType} ::= SEQUENCE
{
    packetType TPacketType,
--! secondaryHeaderFlag INTEGER (0 .. 1),  moved to ACN
    applicationProcess-ID ApplicationProcess-ID
}

SecondaryHeaderFlag ::= INTEGER (0 .. 1)

PacketSequenceControl ::= SEQUENCE
{
    sequenceFlags NULL,
    packetSequenceCountOrName INTEGER (0 .. 16383)
}

PacketDataLength ::= INTEGER (0 .. 65535)

PacketDataField {TPacketDataWithSecondaryHeader, TPacketDataNoSecondaryHeader} ::= CHOICE
{
    dataWithSecondaryHeader TPacketDataWithSecondaryHeader,
    dataNoSecondaryHeader TPacketDataNoSecondaryHeader
}

DataWithSecondaryHeader {TSecondaryHeaderField, TPayload} ::= SEQUENCE
{
    secondaryHeader TSecondaryHeaderField,
    data TPayload,
--! spare NULL,    defined as align-to-next acn encoding
    packetErrorContol PacketErrorControl OPTIONAL
}

DataNoSecondaryHeader {TPayload} ::= SEQUENCE
{
    data TPayload,
--! spare NULL,    defined as align-to-next acn encoding
    packetErrorContol PacketErrorControl OPTIONAL
}

PacketErrorControl ::= BIT STRING (SIZE(16))

ServiceType-ID ::= INTEGER (1 .. 255)
MessageSubtype-ID ::= INTEGER (1 .. 255)

END
