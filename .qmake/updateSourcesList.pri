######################################################################
# Copyright (C) 2017 N7 Space sp. z o. o.
# Contact: http://n7space.com
#
# This file is part of ASN.1/ACN Plugin for QtCreator.
#
# Plugin was developed under a programme and funded by
# European Space Agency.
#
# This Plugin is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This Plugin is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#######################################################################

ASN1_MAIN_GENERATED_HEADER = $${ASN1SCC_SRC_DIR}/asn1crt.h

defineReplace(createDependencyOrder) {
  file = $${1}
  fileName = $${2}

  eval($${file}_custom.target = $${file})
  eval($${file}_custom.depends = $${ASN1_MAIN_GENERATED_HEADER})
  eval(export($${file}_custom.target))
  eval(export($${file}_custom.depends))

  QMAKE_EXTRA_TARGETS += $${file}_custom
  export(QMAKE_EXTRA_TARGETS)

  return($$file)
}

defineReplace(createFileNames) {
    allFiles = $${1}

    for(file, allFiles) {
        fileBaseName = $$basename(file)
        splitted = $$split(fileBaseName, ".")
        extension = $$last(splitted)

        equals(extension, asn)|equals(extension, asn1) {
            fileNames += $$first(splitted)
        }
    }

    return($$fileNames)
}

defineReplace(createEmptyFiles) {
    files = $${1}
    contents = "File will be generated by asn1scc during build"

    for(file, files) {
        write_file($$file, contents)
        unix|macx {
            system("touch -t 197001020000 $${file}")
        } else {
            touch($$file, $${QMAKE_QMAKE})
        }
    }
    return($$files)
}

defineReplace(createGeneratedFilesList) {
    sourcesNames = $${1}
    extension = $${2}

    for(name, sourcesNames) {
        source = $$clean_path($${ASN1SCC_SRC_DIR}/$${name}.$${extension})
        sources += $$createDependencyOrder($$source, $$name)
    }

    return($$createEmptyFiles($$sources))
}

names = $$createFileNames($$DISTFILES)

!isEmpty(names) {
    PERSISTENT_HEADERS = $${ASN1_MAIN_GENERATED_HEADER}
    PERSISTENT_SOURCES = $${ASN1SCC_SRC_DIR}/asn1crt.c $${ASN1SCC_SRC_DIR}/real.c

    contains(ASN1SCC_GENERATION_OPTIONS, -ACN) {
        PERSISTENT_SOURCES += $${ASN1SCC_SRC_DIR}/acn.c
    }
}

SOURCES += $$createGeneratedFilesList($$names, "c") $$createEmptyFiles($$PERSISTENT_SOURCES)
HEADERS += $$createGeneratedFilesList($$names, "h") $$createEmptyFiles($$PERSISTENT_HEADERS)

INCLUDEPATH += $$ASN1SCC_SRC_DIR
